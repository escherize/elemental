["^ ","~:output",["^ ","~:js","goog.provide('reagent.ratom');\ngoog.require('cljs.core');\ngoog.require('reagent.impl.util');\ngoog.require('reagent.debug');\ngoog.require('reagent.impl.batching');\ngoog.require('clojure.set');\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.debug !== 'undefined')){\n} else {\nreagent.ratom.debug = false;\n}\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.generation !== 'undefined')){\n} else {\nreagent.ratom.generation = (0);\n}\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom._running !== 'undefined')){\n} else {\nreagent.ratom._running = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\n}\nreagent.ratom.reactive_QMARK_ = (function reagent$ratom$reactive_QMARK_(){\nreturn (!((reagent.ratom._STAR_ratom_context_STAR_ == null)));\n});\nreagent.ratom.running = (function reagent$ratom$running(){\nreturn cljs.core.deref(reagent.ratom._running);\n});\nreagent.ratom.arr_len = (function reagent$ratom$arr_len(x){\nif((x == null)){\nreturn (0);\n} else {\nreturn x.length;\n}\n});\nreagent.ratom.arr_eq = (function reagent$ratom$arr_eq(x,y){\nvar len = reagent.ratom.arr_len(x);\nif((len === reagent.ratom.arr_len(y))){\nvar i = (0);\nwhile(true){\nvar or__4185__auto__ = (i === len);\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nif(((x[i]) === (y[i]))){\nvar G__37175 = (i + (1));\ni = G__37175;\ncontinue;\n} else {\nreturn false;\n}\n}\nbreak;\n}\n} else {\nreturn false;\n}\n});\nreagent.ratom.in_context = (function reagent$ratom$in_context(obj,f){\nvar _STAR_ratom_context_STAR__orig_val__36718 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__36719 = obj;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__36719);\n\ntry{return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__36718);\n}});\nreagent.ratom.deref_capture = (function reagent$ratom$deref_capture(f,r){\n(r.captured = null);\n\n(r.ratomGeneration = (reagent.ratom.generation = (reagent.ratom.generation + (1))));\n\n\nvar res = reagent.ratom.in_context(r,f);\nvar c = r.captured;\n(r.dirty_QMARK_ = false);\n\nif(reagent.ratom.arr_eq(c,r.watching)){\n} else {\nr._update_watching(c);\n}\n\nreturn res;\n});\nreagent.ratom.notify_deref_watcher_BANG_ = (function reagent$ratom$notify_deref_watcher_BANG_(derefed){\nvar temp__5739__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar r = temp__5739__auto__;\nvar c = r.captured;\nif((c == null)){\nreturn (r.captured = [derefed]);\n} else {\nreturn c.push(derefed);\n}\n}\n});\nreagent.ratom.check_watches = (function reagent$ratom$check_watches(old,new$){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.ratom._running,cljs.core._PLUS_,(cljs.core.count(new$) - cljs.core.count(old)));\n} else {\n}\n\nreturn new$;\n});\nreagent.ratom.add_w = (function reagent$ratom$add_w(this$,key,f){\nvar w = this$.watches;\n(this$.watches = reagent.ratom.check_watches(w,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(w,key,f)));\n\nreturn (this$.watchesArr = null);\n});\nreagent.ratom.remove_w = (function reagent$ratom$remove_w(this$,key){\nvar w = this$.watches;\n(this$.watches = reagent.ratom.check_watches(w,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(w,key)));\n\nreturn (this$.watchesArr = null);\n});\nreagent.ratom.notify_w = (function reagent$ratom$notify_w(this$,old,new$){\nvar w = this$.watchesArr;\nvar a = (((w == null))?(this$.watchesArr = cljs.core.reduce_kv((function (p1__36744_SHARP_,p2__36745_SHARP_,p3__36746_SHARP_){\nvar G__36748 = p1__36744_SHARP_;\nG__36748.push(p2__36745_SHARP_);\n\nG__36748.push(p3__36746_SHARP_);\n\nreturn G__36748;\n}),[],this$.watches)):w);\nvar len = a.length;\nvar i = (0);\nwhile(true){\nif((i < len)){\nvar k_37193 = (a[i]);\nvar f_37194 = (a[(i + (1))]);\n(f_37194.cljs$core$IFn$_invoke$arity$4 ? f_37194.cljs$core$IFn$_invoke$arity$4(k_37193,this$,old,new$) : f_37194.call(null,k_37193,this$,old,new$));\n\nvar G__37195 = ((2) + i);\ni = G__37195;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nreagent.ratom.pr_atom = (function reagent$ratom$pr_atom(a,writer,opts,s){\ncljs.core._write(writer,[\"#<\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),\" \"].join(''));\n\ncljs.core.pr_writer((function (){var _STAR_ratom_context_STAR__orig_val__36751 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__36752 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__36752);\n\ntry{return cljs.core._deref(a);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__36751);\n}})(),writer,opts);\n\nreturn cljs.core._write(writer,\">\");\n});\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.rea_queue !== 'undefined')){\n} else {\nreagent.ratom.rea_queue = null;\n}\nreagent.ratom.rea_enqueue = (function reagent$ratom$rea_enqueue(r){\nif((reagent.ratom.rea_queue == null)){\n(reagent.ratom.rea_queue = []);\n\nreagent.impl.batching.schedule();\n} else {\n}\n\nreturn reagent.ratom.rea_queue.push(r);\n});\nreagent.ratom.flush_BANG_ = (function reagent$ratom$flush_BANG_(){\nwhile(true){\nvar q = reagent.ratom.rea_queue;\nif((q == null)){\nreturn null;\n} else {\n(reagent.ratom.rea_queue = null);\n\nvar n__4666__auto___37196 = q.length;\nvar i_37197 = (0);\nwhile(true){\nif((i_37197 < n__4666__auto___37196)){\n(q[i_37197])._queued_run();\n\nvar G__37198 = (i_37197 + (1));\ni_37197 = G__37198;\ncontinue;\n} else {\n}\nbreak;\n}\n\ncontinue;\n}\nbreak;\n}\n});\n(reagent.impl.batching.ratom_flush = reagent.ratom.flush_BANG_);\n\n/**\n * @interface\n */\nreagent.ratom.IReactiveAtom = function(){};\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IWithMeta}\n*/\nreagent.ratom.RAtom = (function (state,meta,validator,watches){\nthis.state = state;\nthis.meta = meta;\nthis.validator = validator;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2154201088;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.RAtom.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Atom:\");\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.meta;\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,new_value){\nvar self__ = this;\nvar a__$1 = this;\nif((self__.validator == null)){\n} else {\nif(cljs.core.truth_((self__.validator.cljs$core$IFn$_invoke$arity$1 ? self__.validator.cljs$core$IFn$_invoke$arity$1(new_value) : self__.validator.call(null,new_value)))){\n} else {\nthrow (new Error([\"Assert failed: \",\"Validator rejected reference state\",\"\\n\",\"(validator new-value)\"].join('')));\n}\n}\n\nvar old_value = self__.state;\n(self__.state = new_value);\n\nif((self__.watches == null)){\n} else {\nreagent.ratom.notify_w(a__$1,old_value,new_value);\n}\n\nreturn new_value;\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn cljs.core._reset_BANG_(a__$1,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn cljs.core._reset_BANG_(a__$1,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn cljs.core._reset_BANG_(a__$1,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn cljs.core._reset_BANG_(a__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){\nvar self__ = this;\nvar ___$1 = this;\nreturn (new reagent.ratom.RAtom(self__.state,new_meta,self__.validator,self__.watches));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nreturn self__.state;\n}));\n\n(reagent.ratom.RAtom.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"meta\",\"meta\",-1154898805,null),new cljs.core.Symbol(null,\"validator\",\"validator\",-325659154,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.RAtom.cljs$lang$type = true);\n\n(reagent.ratom.RAtom.cljs$lang$ctorStr = \"reagent.ratom/RAtom\");\n\n(reagent.ratom.RAtom.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"reagent.ratom/RAtom\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/RAtom.\n */\nreagent.ratom.__GT_RAtom = (function reagent$ratom$__GT_RAtom(state,meta,validator,watches){\nreturn (new reagent.ratom.RAtom(state,meta,validator,watches));\n});\n\n/**\n * Like clojure.core/atom, except that it keeps track of derefs.\n */\nreagent.ratom.atom = (function reagent$ratom$atom(var_args){\nvar G__36774 = arguments.length;\nswitch (G__36774) {\ncase 1:\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nvar args_arr__4810__auto__ = [];\nvar len__4789__auto___37204 = arguments.length;\nvar i__4790__auto___37205 = (0);\nwhile(true){\nif((i__4790__auto___37205 < len__4789__auto___37204)){\nargs_arr__4810__auto__.push((arguments[i__4790__auto___37205]));\n\nvar G__37206 = (i__4790__auto___37205 + (1));\ni__4790__auto___37205 = G__37206;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4811__auto__ = (new cljs.core.IndexedSeq(args_arr__4810__auto__.slice((1)),(0),null));\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4811__auto__);\n\n}\n});\n\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1 = (function (x){\nreturn reagent.ratom.__GT_RAtom(x,null,null,null);\n}));\n\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic = (function (x,p__36777){\nvar map__36778 = p__36777;\nvar map__36778__$1 = (((((!((map__36778 == null))))?(((((map__36778.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__36778.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__36778):map__36778);\nvar meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__36778__$1,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964));\nvar validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__36778__$1,new cljs.core.Keyword(null,\"validator\",\"validator\",-1966190681));\nreturn reagent.ratom.__GT_RAtom(x,meta,validator,null);\n}));\n\n/** @this {Function} */\n(reagent.ratom.atom.cljs$lang$applyTo = (function (seq36771){\nvar G__36772 = cljs.core.first(seq36771);\nvar seq36771__$1 = cljs.core.next(seq36771);\nvar self__4776__auto__ = this;\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__36772,seq36771__$1);\n}));\n\n(reagent.ratom.atom.cljs$lang$maxFixedArity = (1));\n\nreagent.ratom.cache_key = \"reagReactionCache\";\nreagent.ratom.cached_reaction = (function reagent$ratom$cached_reaction(f,o,k,obj,destroy){\nvar m = (o[\"reagReactionCache\"]);\nvar m__$1 = (((m == null))?cljs.core.PersistentArrayMap.EMPTY:m);\nvar r = (m__$1.cljs$core$IFn$_invoke$arity$2 ? m__$1.cljs$core$IFn$_invoke$arity$2(k,null) : m__$1.call(null,k,null));\nif((!((r == null)))){\nreturn cljs.core._deref(r);\n} else {\nif((reagent.ratom._STAR_ratom_context_STAR_ == null)){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n} else {\nvar r__$1 = (function (){var G__36783 = f;\nvar G__36784 = new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360);\nvar G__36785 = (function (x){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.dec);\n} else {\n}\n\nvar __37216 = (o[\"reagReactionCache\"]);\nvar __37217__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(__37216,k);\n(o[\"reagReactionCache\"] = __37217__$1);\n\nif((!((obj == null)))){\n(obj.reaction = null);\n} else {\n}\n\nif((!((destroy == null)))){\nreturn (destroy.cljs$core$IFn$_invoke$arity$1 ? destroy.cljs$core$IFn$_invoke$arity$1(x) : destroy.call(null,x));\n} else {\nreturn null;\n}\n});\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__36783,G__36784,G__36785) : reagent.ratom.make_reaction.call(null,G__36783,G__36784,G__36785));\n})();\nvar v = cljs.core._deref(r__$1);\n(o[\"reagReactionCache\"] = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,r__$1));\n\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.inc);\n} else {\n}\n\nif((!((obj == null)))){\n(obj.reaction = r__$1);\n} else {\n}\n\nreturn v;\n\n}\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Track = (function (f,args,reaction){\nthis.f = f;\nthis.args = args;\nthis.reaction = reaction;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(reagent.ratom.Track.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Track.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5737__auto__ = self__.reaction;\nif((temp__5737__auto__ == null)){\nreturn reagent.ratom.cached_reaction((function (){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.f,self__.args);\n}),self__.f,self__.args,this$__$1,null);\n} else {\nvar r = temp__5737__auto__;\nreturn cljs.core._deref(r);\n}\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.Track)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.f,other.f)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.args,other.args)));\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f,self__.args], null));\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Track:\");\n}));\n\n(reagent.ratom.Track.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),new cljs.core.Symbol(null,\"args\",\"args\",-1338879193,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Track.cljs$lang$type = true);\n\n(reagent.ratom.Track.cljs$lang$ctorStr = \"reagent.ratom/Track\");\n\n(reagent.ratom.Track.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"reagent.ratom/Track\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Track.\n */\nreagent.ratom.__GT_Track = (function reagent$ratom$__GT_Track(f,args,reaction){\nreturn (new reagent.ratom.Track(f,args,reaction));\n});\n\nreagent.ratom.make_track = (function reagent$ratom$make_track(f,args){\nreturn (new reagent.ratom.Track(f,args,null));\n});\nreagent.ratom.make_track_BANG_ = (function reagent$ratom$make_track_BANG_(f,args){\nvar t = reagent.ratom.make_track(f,args);\nvar r = (function (){var G__36800 = (function (){\nreturn cljs.core._deref(t);\n});\nvar G__36801 = new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437);\nvar G__36802 = true;\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__36800,G__36801,G__36802) : reagent.ratom.make_reaction.call(null,G__36800,G__36801,G__36802));\n})();\ncljs.core.deref(r);\n\nreturn r;\n});\nreagent.ratom.track = (function reagent$ratom$track(var_args){\nvar args__4795__auto__ = [];\nvar len__4789__auto___37251 = arguments.length;\nvar i__4790__auto___37252 = (0);\nwhile(true){\nif((i__4790__auto___37252 < len__4789__auto___37251)){\nargs__4795__auto__.push((arguments[i__4790__auto___37252]));\n\nvar G__37253 = (i__4790__auto___37252 + (1));\ni__4790__auto___37252 = G__37253;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4796__auto__ = ((((1) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4796__auto__);\n});\n\n(reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\"Assert failed: (ifn? f)\"));\n}\n\nreturn reagent.ratom.make_track(f,args);\n}));\n\n(reagent.ratom.track.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.track.cljs$lang$applyTo = (function (seq36806){\nvar G__36807 = cljs.core.first(seq36806);\nvar seq36806__$1 = cljs.core.next(seq36806);\nvar self__4776__auto__ = this;\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__36807,seq36806__$1);\n}));\n\nreagent.ratom.track_BANG_ = (function reagent$ratom$track_BANG_(var_args){\nvar args__4795__auto__ = [];\nvar len__4789__auto___37256 = arguments.length;\nvar i__4790__auto___37257 = (0);\nwhile(true){\nif((i__4790__auto___37257 < len__4789__auto___37256)){\nargs__4795__auto__.push((arguments[i__4790__auto___37257]));\n\nvar G__37258 = (i__4790__auto___37257 + (1));\ni__4790__auto___37257 = G__37258;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4796__auto__ = ((((1) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4796__auto__);\n});\n\n(reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\"Assert failed: (ifn? f)\"));\n}\n\nreturn reagent.ratom.make_track_BANG_(f,args);\n}));\n\n(reagent.ratom.track_BANG_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.track_BANG_.cljs$lang$applyTo = (function (seq36811){\nvar G__36812 = cljs.core.first(seq36811);\nvar seq36811__$1 = cljs.core.next(seq36811);\nvar self__4776__auto__ = this;\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__36812,seq36811__$1);\n}));\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.RCursor = (function (ratom,path,reaction,state,watches){\nthis.ratom = ratom;\nthis.path = path;\nthis.reaction = reaction;\nthis.state = state;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.RCursor.prototype._peek = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__36814 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__36815 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__36815);\n\ntry{return cljs.core._deref(this$);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__36814);\n}}));\n\n(reagent.ratom.RCursor.prototype._set_state = (function (oldstate,newstate){\nvar self__ = this;\nvar this$ = this;\nif((oldstate === newstate)){\nreturn null;\n} else {\n(self__.state = newstate);\n\nif((!((self__.watches == null)))){\nreturn reagent.ratom.notify_w(this$,oldstate,newstate);\n} else {\nreturn null;\n}\n}\n}));\n\n(reagent.ratom.RCursor.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,[\"Cursor: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.path)].join(''));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom,self__.path], null));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.RCursor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,other.path)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.ratom,other.ratom)));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,new_value){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nthis$__$1._set_state(oldstate,new_value);\n\nif((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,cljs.core.PersistentVector.EMPTY)){\ncljs.core.reset_BANG_(self__.ratom,new_value);\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.ratom,cljs.core.assoc_in,self__.path,new_value);\n}\n} else {\n(self__.ratom.cljs$core$IFn$_invoke$arity$2 ? self__.ratom.cljs$core$IFn$_invoke$arity$2(self__.path,new_value) : self__.ratom.call(null,self__.path,new_value));\n}\n\nreturn new_value;\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn cljs.core._reset_BANG_(a__$1,(function (){var G__36823 = a__$1._peek();\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36823) : f.call(null,G__36823));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn cljs.core._reset_BANG_(a__$1,(function (){var G__36825 = a__$1._peek();\nvar G__36826 = x;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36825,G__36826) : f.call(null,G__36825,G__36826));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn cljs.core._reset_BANG_(a__$1,(function (){var G__36827 = a__$1._peek();\nvar G__36828 = x;\nvar G__36829 = y;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36827,G__36828,G__36829) : f.call(null,G__36827,G__36828,G__36829));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn cljs.core._reset_BANG_(a__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a__$1._peek(),x,y,more));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nvar newstate = (function (){var temp__5737__auto__ = self__.reaction;\nif((temp__5737__auto__ == null)){\nvar f = (((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom)))?(function (){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.ratom),self__.path);\n}):(function (){\nreturn (self__.ratom.cljs$core$IFn$_invoke$arity$1 ? self__.ratom.cljs$core$IFn$_invoke$arity$1(self__.path) : self__.ratom.call(null,self__.path));\n}));\nreturn reagent.ratom.cached_reaction(f,self__.ratom,self__.path,this$__$1,null);\n} else {\nvar r = temp__5737__auto__;\nreturn cljs.core._deref(r);\n}\n})();\nthis$__$1._set_state(oldstate,newstate);\n\nreturn newstate;\n}));\n\n(reagent.ratom.RCursor.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ratom\",\"ratom\",1514010260,null),new cljs.core.Symbol(null,\"path\",\"path\",1452340359,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.RCursor.cljs$lang$type = true);\n\n(reagent.ratom.RCursor.cljs$lang$ctorStr = \"reagent.ratom/RCursor\");\n\n(reagent.ratom.RCursor.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"reagent.ratom/RCursor\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/RCursor.\n */\nreagent.ratom.__GT_RCursor = (function reagent$ratom$__GT_RCursor(ratom,path,reaction,state,watches){\nreturn (new reagent.ratom.RCursor(ratom,path,reaction,state,watches));\n});\n\nreagent.ratom.cursor = (function reagent$ratom$cursor(src,path){\nif((function (){var or__4185__auto__ = (((!((src == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === src.reagent$ratom$IReactiveAtom$))))?true:(((!src.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,src):false)):cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,src));\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nreturn ((cljs.core.ifn_QMARK_(src)) && ((!(cljs.core.vector_QMARK_(src)))));\n}\n})()){\n} else {\nthrow (new Error([\"Assert failed: \",[\"src must be a reactive atom or a function, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([src], 0))].join(''),\"\\n\",\"(or (satisfies? IReactiveAtom src) (and (ifn? src) (not (vector? src))))\"].join('')));\n}\n\nreturn reagent.ratom.__GT_RCursor(src,path,null,null,null);\n});\nreagent.ratom.with_let_destroy = (function reagent$ratom$with_let_destroy(v){\nvar temp__5739__auto__ = v.destroy;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar f = temp__5739__auto__;\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}\n});\nreagent.ratom.with_let_values = (function reagent$ratom$with_let_values(key){\nvar temp__5737__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5737__auto__ == null)){\nreturn [];\n} else {\nvar c = temp__5737__auto__;\nreturn reagent.ratom.cached_reaction(cljs.core.array,c,key,null,reagent.ratom.with_let_destroy);\n}\n});\n\n/**\n * @interface\n */\nreagent.ratom.IDisposable = function(){};\n\nreagent.ratom.dispose_BANG_ = (function reagent$ratom$dispose_BANG_(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1 == null)))))){\nreturn this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);\n} else {\nvar x__4487__auto__ = (((this$ == null))?null:this$);\nvar m__4488__auto__ = (reagent.ratom.dispose_BANG_[goog.typeOf(x__4487__auto__)]);\nif((!((m__4488__auto__ == null)))){\nreturn (m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4488__auto__.call(null,this$));\n} else {\nvar m__4485__auto__ = (reagent.ratom.dispose_BANG_[\"_\"]);\nif((!((m__4485__auto__ == null)))){\nreturn (m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4485__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.dispose!\",this$);\n}\n}\n}\n});\n\nreagent.ratom.add_on_dispose_BANG_ = (function reagent$ratom$add_on_dispose_BANG_(this$,f){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 == null)))))){\nreturn this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2(this$,f);\n} else {\nvar x__4487__auto__ = (((this$ == null))?null:this$);\nvar m__4488__auto__ = (reagent.ratom.add_on_dispose_BANG_[goog.typeOf(x__4487__auto__)]);\nif((!((m__4488__auto__ == null)))){\nreturn (m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4488__auto__.call(null,this$,f));\n} else {\nvar m__4485__auto__ = (reagent.ratom.add_on_dispose_BANG_[\"_\"]);\nif((!((m__4485__auto__ == null)))){\nreturn (m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4485__auto__.call(null,this$,f));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.add-on-dispose!\",this$);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nreagent.ratom.IRunnable = function(){};\n\nreagent.ratom.run = (function reagent$ratom$run(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IRunnable$run$arity$1 == null)))))){\nreturn this$.reagent$ratom$IRunnable$run$arity$1(this$);\n} else {\nvar x__4487__auto__ = (((this$ == null))?null:this$);\nvar m__4488__auto__ = (reagent.ratom.run[goog.typeOf(x__4487__auto__)]);\nif((!((m__4488__auto__ == null)))){\nreturn (m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4488__auto__.call(null,this$));\n} else {\nvar m__4485__auto__ = (reagent.ratom.run[\"_\"]);\nif((!((m__4485__auto__ == null)))){\nreturn (m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4485__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IRunnable.run\",this$);\n}\n}\n}\n});\n\nreagent.ratom.handle_reaction_change = (function reagent$ratom$handle_reaction_change(this$,sender,old,new$){\nreturn this$._handle_change(sender,old,new$);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {reagent.ratom.IRunnable}\n * @implements {reagent.ratom.IDisposable}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Reaction = (function (f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nthis.f = f;\nthis.state = state;\nthis.dirty_QMARK_ = dirty_QMARK_;\nthis.nocache_QMARK_ = nocache_QMARK_;\nthis.watching = watching;\nthis.watches = watches;\nthis.auto_run = auto_run;\nthis.caught = caught;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.Reaction.prototype._peek_at = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__36867 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__36868 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__36868);\n\ntry{return cljs.core._deref(this$);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__36867);\n}}));\n\n(reagent.ratom.Reaction.prototype._handle_change = (function (sender,oldval,newval){\nvar self__ = this;\nvar this$ = this;\nif((((oldval === newval)) || (self__.dirty_QMARK_))){\nreturn null;\n} else {\nif((self__.auto_run == null)){\n(self__.dirty_QMARK_ = true);\n\nreturn reagent.ratom.rea_enqueue(this$);\n} else {\nif(self__.auto_run === true){\nreturn this$._run(false);\n} else {\nreturn (self__.auto_run.cljs$core$IFn$_invoke$arity$1 ? self__.auto_run.cljs$core$IFn$_invoke$arity$1(this$) : self__.auto_run.call(null,this$));\n}\n}\n}\n}));\n\n(reagent.ratom.Reaction.prototype._update_watching = (function (derefed){\nvar self__ = this;\nvar this$ = this;\nvar new$ = cljs.core.set(derefed);\nvar old = cljs.core.set(self__.watching);\n(self__.watching = derefed);\n\nvar seq__36876_37316 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(new$,old));\nvar chunk__36877_37317 = null;\nvar count__36878_37318 = (0);\nvar i__36879_37319 = (0);\nwhile(true){\nif((i__36879_37319 < count__36878_37318)){\nvar w_37320 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(chunk__36877_37317,i__36879_37319);\ncljs.core._add_watch(w_37320,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__37321 = seq__36876_37316;\nvar G__37322 = chunk__36877_37317;\nvar G__37323 = count__36878_37318;\nvar G__37324 = (i__36879_37319 + (1));\nseq__36876_37316 = G__37321;\nchunk__36877_37317 = G__37322;\ncount__36878_37318 = G__37323;\ni__36879_37319 = G__37324;\ncontinue;\n} else {\nvar temp__5735__auto___37325 = cljs.core.seq(seq__36876_37316);\nif(temp__5735__auto___37325){\nvar seq__36876_37326__$1 = temp__5735__auto___37325;\nif(cljs.core.chunked_seq_QMARK_(seq__36876_37326__$1)){\nvar c__4609__auto___37327 = cljs.core.chunk_first(seq__36876_37326__$1);\nvar G__37328 = cljs.core.chunk_rest(seq__36876_37326__$1);\nvar G__37329 = c__4609__auto___37327;\nvar G__37330 = cljs.core.count(c__4609__auto___37327);\nvar G__37331 = (0);\nseq__36876_37316 = G__37328;\nchunk__36877_37317 = G__37329;\ncount__36878_37318 = G__37330;\ni__36879_37319 = G__37331;\ncontinue;\n} else {\nvar w_37332 = cljs.core.first(seq__36876_37326__$1);\ncljs.core._add_watch(w_37332,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__37333 = cljs.core.next(seq__36876_37326__$1);\nvar G__37334 = null;\nvar G__37335 = (0);\nvar G__37336 = (0);\nseq__36876_37316 = G__37333;\nchunk__36877_37317 = G__37334;\ncount__36878_37318 = G__37335;\ni__36879_37319 = G__37336;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__36894 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(old,new$));\nvar chunk__36895 = null;\nvar count__36896 = (0);\nvar i__36897 = (0);\nwhile(true){\nif((i__36897 < count__36896)){\nvar w = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(chunk__36895,i__36897);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__37337 = seq__36894;\nvar G__37338 = chunk__36895;\nvar G__37339 = count__36896;\nvar G__37340 = (i__36897 + (1));\nseq__36894 = G__37337;\nchunk__36895 = G__37338;\ncount__36896 = G__37339;\ni__36897 = G__37340;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__36894);\nif(temp__5735__auto__){\nvar seq__36894__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__36894__$1)){\nvar c__4609__auto__ = cljs.core.chunk_first(seq__36894__$1);\nvar G__37346 = cljs.core.chunk_rest(seq__36894__$1);\nvar G__37347 = c__4609__auto__;\nvar G__37348 = cljs.core.count(c__4609__auto__);\nvar G__37349 = (0);\nseq__36894 = G__37346;\nchunk__36895 = G__37347;\ncount__36896 = G__37348;\ni__36897 = G__37349;\ncontinue;\n} else {\nvar w = cljs.core.first(seq__36894__$1);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__37355 = cljs.core.next(seq__36894__$1);\nvar G__37356 = null;\nvar G__37357 = (0);\nvar G__37358 = (0);\nseq__36894 = G__37355;\nchunk__36895 = G__37356;\ncount__36896 = G__37357;\ni__36897 = G__37358;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\n\n(reagent.ratom.Reaction.prototype._queued_run = (function (){\nvar self__ = this;\nvar this$ = this;\nif(((self__.dirty_QMARK_) && ((!((self__.watching == null)))))){\nreturn this$._run(true);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype._try_capture = (function (f__$1){\nvar self__ = this;\nvar this$ = this;\ntry{(self__.caught = null);\n\nreturn reagent.ratom.deref_capture(f__$1,this$);\n}catch (e36899){var e = e36899;\n(self__.state = e);\n\n(self__.caught = e);\n\nreturn (self__.dirty_QMARK_ = false);\n}}));\n\n(reagent.ratom.Reaction.prototype._run = (function (check){\nvar self__ = this;\nvar this$ = this;\nvar oldstate = self__.state;\nvar res = (cljs.core.truth_(check)?this$._try_capture(self__.f):reagent.ratom.deref_capture(self__.f,this$));\nif(self__.nocache_QMARK_){\n} else {\n(self__.state = res);\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate,res)))){\n} else {\nreagent.ratom.notify_w(this$,oldstate,res);\n}\n}\n\nreturn res;\n}));\n\n(reagent.ratom.Reaction.prototype._set_opts = (function (p__36900){\nvar self__ = this;\nvar map__36901 = p__36900;\nvar map__36901__$1 = (((((!((map__36901 == null))))?(((((map__36901.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__36901.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__36901):map__36901);\nvar auto_run__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__36901__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__36901__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__36901__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar no_cache = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__36901__$1,new cljs.core.Keyword(null,\"no-cache\",\"no-cache\",1588056370));\nvar this$ = this;\nif((!((auto_run__$1 == null)))){\n(this$.auto_run = auto_run__$1);\n} else {\n}\n\nif((!((on_set == null)))){\n(this$.on_set = on_set);\n} else {\n}\n\nif((!((on_dispose == null)))){\n(this$.on_dispose = on_dispose);\n} else {\n}\n\nif((!((no_cache == null)))){\nreturn (this$.nocache_QMARK_ = no_cache);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,[\"Reaction \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.hash(a__$1)),\":\"].join(''));\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar s = self__.state;\nvar wg = self__.watching;\n(self__.watching = null);\n\n(self__.state = null);\n\n(self__.auto_run = null);\n\n(self__.dirty_QMARK_ = true);\n\nvar seq__36919_37379 = cljs.core.seq(cljs.core.set(wg));\nvar chunk__36920_37380 = null;\nvar count__36921_37381 = (0);\nvar i__36922_37382 = (0);\nwhile(true){\nif((i__36922_37382 < count__36921_37381)){\nvar w_37383 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(chunk__36920_37380,i__36922_37382);\ncljs.core._remove_watch(w_37383,this$__$1);\n\n\nvar G__37385 = seq__36919_37379;\nvar G__37386 = chunk__36920_37380;\nvar G__37387 = count__36921_37381;\nvar G__37388 = (i__36922_37382 + (1));\nseq__36919_37379 = G__37385;\nchunk__36920_37380 = G__37386;\ncount__36921_37381 = G__37387;\ni__36922_37382 = G__37388;\ncontinue;\n} else {\nvar temp__5735__auto___37389 = cljs.core.seq(seq__36919_37379);\nif(temp__5735__auto___37389){\nvar seq__36919_37390__$1 = temp__5735__auto___37389;\nif(cljs.core.chunked_seq_QMARK_(seq__36919_37390__$1)){\nvar c__4609__auto___37391 = cljs.core.chunk_first(seq__36919_37390__$1);\nvar G__37392 = cljs.core.chunk_rest(seq__36919_37390__$1);\nvar G__37393 = c__4609__auto___37391;\nvar G__37394 = cljs.core.count(c__4609__auto___37391);\nvar G__37395 = (0);\nseq__36919_37379 = G__37392;\nchunk__36920_37380 = G__37393;\ncount__36921_37381 = G__37394;\ni__36922_37382 = G__37395;\ncontinue;\n} else {\nvar w_37398 = cljs.core.first(seq__36919_37390__$1);\ncljs.core._remove_watch(w_37398,this$__$1);\n\n\nvar G__37401 = cljs.core.next(seq__36919_37390__$1);\nvar G__37402 = null;\nvar G__37403 = (0);\nvar G__37404 = (0);\nseq__36919_37379 = G__37401;\nchunk__36920_37380 = G__37402;\ncount__36921_37381 = G__37403;\ni__36922_37382 = G__37404;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif((!((this$__$1.on_dispose == null)))){\nthis$__$1.on_dispose(s);\n} else {\n}\n\nvar temp__5739__auto__ = this$__$1.on_dispose_arr;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar a = temp__5739__auto__;\nvar n__4666__auto__ = a.length;\nvar i = (0);\nwhile(true){\nif((i < n__4666__auto__)){\nvar fexpr__36945_37406 = (a[i]);\n(fexpr__36945_37406.cljs$core$IFn$_invoke$arity$1 ? fexpr__36945_37406.cljs$core$IFn$_invoke$arity$1(this$__$1) : fexpr__36945_37406.call(null,this$__$1));\n\nvar G__37407 = (i + (1));\ni = G__37407;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 = (function (this$,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5737__auto__ = this$__$1.on_dispose_arr;\nif((temp__5737__auto__ == null)){\nreturn (this$__$1.on_dispose_arr = [f__$1]);\n} else {\nvar a = temp__5737__auto__;\nreturn a.push(f__$1);\n}\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,newval){\nvar self__ = this;\nvar a__$1 = this;\nif(cljs.core.fn_QMARK_(a__$1.on_set)){\n} else {\nthrow (new Error([\"Assert failed: \",\"Reaction is read only; on-set is not allowed\",\"\\n\",\"(fn? (.-on-set a))\"].join('')));\n}\n\nvar oldval = self__.state;\n(self__.state = newval);\n\na__$1.on_set(oldval,newval);\n\nreagent.ratom.notify_w(a__$1,oldval,newval);\n\nreturn newval;\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f__$1){\nvar self__ = this;\nvar a__$1 = this;\nreturn cljs.core._reset_BANG_(a__$1,(function (){var G__36981 = a__$1._peek_at();\nreturn (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__36981) : f__$1.call(null,G__36981));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f__$1,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn cljs.core._reset_BANG_(a__$1,(function (){var G__36997 = a__$1._peek_at();\nvar G__36998 = x;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$2 ? f__$1.cljs$core$IFn$_invoke$arity$2(G__36997,G__36998) : f__$1.call(null,G__36997,G__36998));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f__$1,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn cljs.core._reset_BANG_(a__$1,(function (){var G__37002 = a__$1._peek_at();\nvar G__37003 = x;\nvar G__37004 = y;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$3 ? f__$1.cljs$core$IFn$_invoke$arity$3(G__37002,G__37003,G__37004) : f__$1.call(null,G__37002,G__37003,G__37004));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f__$1,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn cljs.core._reset_BANG_(a__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f__$1,a__$1._peek_at(),x,y,more));\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreagent.ratom.flush_BANG_();\n\nreturn this$__$1._run(false);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f__$1);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nvar was_empty = cljs.core.empty_QMARK_(self__.watches);\nreagent.ratom.remove_w(this$__$1,key);\n\nif((((!(was_empty))) && (cljs.core.empty_QMARK_(self__.watches)) && ((self__.auto_run == null)))){\nreturn reagent.ratom.dispose_BANG_(this$__$1);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5739__auto___37440 = self__.caught;\nif((temp__5739__auto___37440 == null)){\n} else {\nvar e_37445 = temp__5739__auto___37440;\nthrow e_37445;\n}\n\nvar non_reactive_37446 = (reagent.ratom._STAR_ratom_context_STAR_ == null);\nif(non_reactive_37446){\nreagent.ratom.flush_BANG_();\n} else {\n}\n\nif(((non_reactive_37446) && ((self__.auto_run == null)))){\nif(self__.dirty_QMARK_){\nvar oldstate_37449 = self__.state;\n(self__.state = (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null)));\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate_37449,self__.state)))){\n} else {\nreagent.ratom.notify_w(this$__$1,oldstate_37449,self__.state);\n}\n} else {\n}\n} else {\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nif(self__.dirty_QMARK_){\nthis$__$1._run(false);\n} else {\n}\n}\n\nreturn self__.state;\n}));\n\n(reagent.ratom.Reaction.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"dirty?\",\"dirty?\",-419314319,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"nocache?\",\"nocache?\",-1065670978,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watching\",\"watching\",1947648227,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"auto-run\",\"auto-run\",-696035332,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"caught\",\"caught\",2084008322,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Reaction.cljs$lang$type = true);\n\n(reagent.ratom.Reaction.cljs$lang$ctorStr = \"reagent.ratom/Reaction\");\n\n(reagent.ratom.Reaction.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"reagent.ratom/Reaction\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Reaction.\n */\nreagent.ratom.__GT_Reaction = (function reagent$ratom$__GT_Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nreturn (new reagent.ratom.Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught));\n});\n\nreagent.ratom.make_reaction = (function reagent$ratom$make_reaction(var_args){\nvar args__4795__auto__ = [];\nvar len__4789__auto___37472 = arguments.length;\nvar i__4790__auto___37473 = (0);\nwhile(true){\nif((i__4790__auto___37473 < len__4789__auto___37472)){\nargs__4795__auto__.push((arguments[i__4790__auto___37473]));\n\nvar G__37475 = (i__4790__auto___37473 + (1));\ni__4790__auto___37473 = G__37475;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4796__auto__ = ((((1) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4796__auto__);\n});\n\n(reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic = (function (f,p__37118){\nvar map__37119 = p__37118;\nvar map__37119__$1 = (((((!((map__37119 == null))))?(((((map__37119.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__37119.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__37119):map__37119);\nvar auto_run = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__37119__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__37119__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__37119__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar reaction = reagent.ratom.__GT_Reaction(f,null,true,false,null,null,null,null);\nreaction._set_opts(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437),auto_run,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470),on_set,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360),on_dispose], null));\n\nreturn reaction;\n}));\n\n(reagent.ratom.make_reaction.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.make_reaction.cljs$lang$applyTo = (function (seq37100){\nvar G__37101 = cljs.core.first(seq37100);\nvar seq37100__$1 = cljs.core.next(seq37100);\nvar self__4776__auto__ = this;\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__37101,seq37100__$1);\n}));\n\nreagent.ratom.temp_reaction = reagent.ratom.make_reaction(null);\nreagent.ratom.run_in_reaction = (function reagent$ratom$run_in_reaction(f,obj,key,run,opts){\nvar r = reagent.ratom.temp_reaction;\nvar res = reagent.ratom.deref_capture(f,r);\nif((r.watching == null)){\n} else {\n(reagent.ratom.temp_reaction = reagent.ratom.make_reaction(null));\n\nr._set_opts(opts);\n\n(r.f = f);\n\n(r.auto_run = (function (){\nreturn (run.cljs$core$IFn$_invoke$arity$1 ? run.cljs$core$IFn$_invoke$arity$1(obj) : run.call(null,obj));\n}));\n\n(obj[key] = r);\n}\n\nreturn res;\n});\nreagent.ratom.check_derefs = (function reagent$ratom$check_derefs(f){\nvar ctx = ({});\nvar res = reagent.ratom.in_context(ctx,f);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [res,(!((ctx.captured == null)))], null);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Wrapper = (function (state,callback,changed,watches){\nthis.state = state;\nthis.callback = callback;\nthis.changed = changed;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\nthis.cljs$lang$protocol_mask$partition0$ = 2149613568;\n});\n(reagent.ratom.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nif(((self__.changed) && ((!((reagent.ratom._STAR_ratom_context_STAR_ == null)))))){\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",\"derefing stale wrap: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$__$1], 0))].join(''));\n} else {\n}\n} else {\n}\n\n\nreturn self__.state;\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,newval){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldval = self__.state;\n(self__.changed = true);\n\n(self__.state = newval);\n\nif((!((self__.watches == null)))){\nreagent.ratom.notify_w(this$__$1,oldval,newval);\n} else {\n}\n\n(self__.callback.cljs$core$IFn$_invoke$arity$1 ? self__.callback.cljs$core$IFn$_invoke$arity$1(newval) : self__.callback.call(null,newval));\n\nreturn newval;\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn cljs.core._reset_BANG_(a__$1,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn cljs.core._reset_BANG_(a__$1,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn cljs.core._reset_BANG_(a__$1,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn cljs.core._reset_BANG_(a__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.Wrapper)) && ((!(self__.changed))) && (cljs.core.not(other.changed)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.state,other.state)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.callback,other.callback)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Wrap:\");\n}));\n\n(reagent.ratom.Wrapper.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"callback\",\"callback\",935395299,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"changed\",\"changed\",-2083710852,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Wrapper.cljs$lang$type = true);\n\n(reagent.ratom.Wrapper.cljs$lang$ctorStr = \"reagent.ratom/Wrapper\");\n\n(reagent.ratom.Wrapper.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"reagent.ratom/Wrapper\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Wrapper.\n */\nreagent.ratom.__GT_Wrapper = (function reagent$ratom$__GT_Wrapper(state,callback,changed,watches){\nreturn (new reagent.ratom.Wrapper(state,callback,changed,watches));\n});\n\nreagent.ratom.make_wrapper = (function reagent$ratom$make_wrapper(value,callback_fn,args){\nreturn reagent.ratom.__GT_Wrapper(value,reagent.impl.util.make_partial_fn(callback_fn,args),false,null);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/ratom.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$with-let","~$reagent.ratom","~$dbg","~$reagent.debug","~$log","^H","~$warn","^H","~$error","^H","~$dev?","^H","~$time","^H"],"~:excludes",["~#set",["~$atom"]],"~:macros",["^ ","^E",["^ ","~:arglists",["~#list",[["~$bindings","~$&","~$body"]]],"^7",17,"^8",1,"^6","reagent/ratom.clj","~:name","~$reagent.ratom/with-let","~:ns","^F","~:macro",true],"~$reaction",["^ ","^R",["^S",[["~$&","^U"]]],"^7",5,"^8",1,"^6","reagent/ratom.clj","^V","~$reagent.ratom/reaction","^X","^F","^Y",true],"~$run!",["^ ","^R",["^S",[["~$&","^U"]]],"~:doc","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",9,"^8",1,"^6","reagent/ratom.clj","^V","~$reagent.ratom/run!","^X","^F","^Y",true]],"^V","^F","~:op","^X","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^16","~$cljs.core","^17","~$goog","^18","~$reagent.impl.batching","^19","~$clojure.set","^1:","~$util","^16","~$s","^1:","~$batch","^19","^H","^H"],"~:seen",["^O",["~:require","~:require-macros"]],"~:uses",null,"^1?",["^ ","^F","^F","^H","^H","^17","^17"],"~:form",["^S",["~$ns","^F",["^S",["~:refer-clojure","~:exclude",["^P"]]],["^S",["^1?",["^F","~:refer",["^E"]]]],["^S",["^1>",["^16","~:as","^1;"],["^H","~:refer-macros",["^G","^I","^J","^K","^L","^M"]],["^19","^1F","^1<"],["^1:","^1F","~$s"]]]]],"~:flags",["^ ","^1?",["^O",[]],"^1>",["^O",[]]],"~:js-deps",["^ "],"~:deps",["^18","^17","^16","^H","^19","^1:"]],"^X","^F","~:resource-id",["~:shadow.build.classpath/resource","reagent/ratom.cljs"],"~:compiled-at",1574367189853,"~:resource-name","reagent/ratom.cljs","~:warnings",[],"~:source","(ns reagent.ratom\n  (:refer-clojure :exclude [atom])\n  (:require-macros [reagent.ratom :refer [with-let]])\n  (:require [reagent.impl.util :as util]\n            [reagent.debug :refer-macros [dbg log warn error dev? time]]\n            [reagent.impl.batching :as batch]\n            [clojure.set :as s]))\n\n(declare ^:dynamic *ratom-context*)\n(defonce ^boolean debug false)\n(defonce ^:private generation 0)\n(defonce ^:private -running (clojure.core/atom 0))\n\n(defn ^boolean reactive? []\n  (some? *ratom-context*))\n\n\n;;; Utilities\n\n(defn running []\n  (+ @-running))\n\n(defn- ^number arr-len [x]\n  (if (nil? x) 0 (alength x)))\n\n(defn- ^boolean arr-eq [x y]\n  (let [len (arr-len x)]\n    (and (== len (arr-len y))\n         (loop [i 0]\n           (or (== i len)\n               (if (identical? (aget x i) (aget y i))\n                 (recur (inc i))\n                 false))))))\n\n(defn- in-context [obj f]\n  (binding [*ratom-context* obj]\n    (f)))\n\n(defn- deref-capture [f r]\n  (set! (.-captured r) nil)\n  (when (dev?)\n    (set! (.-ratomGeneration r) (set! generation (inc generation))))\n  (let [res (in-context r f)\n        c (.-captured r)]\n    (set! (.-dirty? r) false)\n    ;; Optimize common case where derefs occur in same order\n    (when-not (arr-eq c (.-watching r))\n      (._update-watching r c))\n    res))\n\n(defn- notify-deref-watcher! [derefed]\n  (when-some [r *ratom-context*]\n    (let [c (.-captured r)]\n      (if (nil? c)\n        (set! (.-captured r) (array derefed))\n        (.push c derefed)))))\n\n(defn- check-watches [old new]\n  (when debug\n    (swap! -running + (- (count new) (count old))))\n  new)\n\n(defn- add-w [this key f]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (assoc w key f)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- remove-w [this key]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (dissoc w key)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- notify-w [this old new]\n  (let [w (.-watchesArr this)\n        a (if (nil? w)\n            ;; Copy watches to array for speed\n            (->> (.-watches this)\n                 (reduce-kv #(doto %1 (.push %2) (.push %3)) #js[])\n                 (set! (.-watchesArr this)))\n            w)]\n    (let [len (alength a)]\n      (loop [i 0]\n        (when (< i len)\n          (let [k (aget a i)\n                f (aget a (inc i))]\n            (f k this old new))\n          (recur (+ 2 i)))))))\n\n(defn- pr-atom [a writer opts s]\n  (-write writer (str \"#<\" s \" \"))\n  (pr-writer (binding [*ratom-context* nil] (-deref a)) writer opts)\n  (-write writer \">\"))\n\n\n;;; Queueing\n\n(defonce ^:private rea-queue nil)\n\n(defn- rea-enqueue [r]\n  (when (nil? rea-queue)\n    (set! rea-queue (array))\n    (batch/schedule))\n  (.push rea-queue r))\n\n(defn flush! []\n  (loop []\n    (let [q rea-queue]\n      (when-not (nil? q)\n        (set! rea-queue nil)\n        (dotimes [i (alength q)]\n          (._queued-run (aget q i)))\n        (recur)))))\n\n(set! batch/ratom-flush flush!)\n\n\n;;; Atom\n\n(defprotocol IReactiveAtom)\n\n(deftype RAtom [^:mutable state meta validator ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IDeref\n  (-deref [this]\n    (notify-deref-watcher! this)\n    state)\n\n  IReset\n  (-reset! [a new-value]\n    (when-not (nil? validator)\n      (assert (validator new-value) \"Validator rejected reference state\"))\n    (let [old-value state]\n      (set! state new-value)\n      (when-not (nil? watches)\n        (notify-w a old-value new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IWithMeta\n  (-with-meta [_ new-meta] (RAtom. state new-meta validator watches))\n\n  IMeta\n  (-meta [_] meta)\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Atom:\"))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn atom\n  \"Like clojure.core/atom, except that it keeps track of derefs.\"\n  ([x] (->RAtom x nil nil nil))\n  ([x & {:keys [meta validator]}] (->RAtom x meta validator nil)))\n\n\n;;; track\n\n(declare make-reaction)\n\n(def ^{:private true :const true} cache-key \"reagReactionCache\")\n\n(defn- cached-reaction [f o k obj destroy]\n  (let [m (aget o cache-key)\n        m (if (nil? m) {} m)\n        r (m k nil)]\n    (cond\n      (some? r) (-deref r)\n      (nil? *ratom-context*) (f)\n      :else (let [r (make-reaction\n                     f :on-dispose (fn [x]\n                                     (when debug (swap! -running dec))\n                                     (as-> (aget o cache-key) _\n                                       (dissoc _ k)\n                                       (aset o cache-key _))\n                                     (when (some? obj)\n                                       (set! (.-reaction obj) nil))\n                                     (when (some? destroy)\n                                       (destroy x))))\n                  v (-deref r)]\n              (aset o cache-key (assoc m k r))\n              (when debug (swap! -running inc))\n              (when (some? obj)\n                (set! (.-reaction obj) r))\n              v))))\n\n(deftype Track [f args ^:mutable reaction]\n  IReactiveAtom\n\n  IDeref\n  (-deref [this]\n    (if-some [r reaction]\n      (-deref r)\n      (cached-reaction #(apply f args) f args this nil)))\n\n  IEquiv\n  (-equiv [_ other]\n    (and (instance? Track other)\n         (= f (.-f other))\n         (= args (.-args other))))\n\n  IHash\n  (-hash [_] (hash [f args]))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Track:\")))\n\n(defn make-track [f args]\n  (Track. f args nil))\n\n(defn make-track! [f args]\n  (let [t (make-track f args)\n        r (make-reaction #(-deref t)\n                         :auto-run true)]\n    @r\n    r))\n\n(defn track [f & args]\n  {:pre [(ifn? f)]}\n  (make-track f args))\n\n(defn track! [f & args]\n  {:pre [(ifn? f)]}\n  (make-track! f args))\n\n;;; cursor\n\n(deftype RCursor [ratom path ^:mutable reaction\n                  ^:mutable state ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [_ other]\n    (and (instance? RCursor other)\n         (= path (.-path other))\n         (= ratom (.-ratom other))))\n\n  Object\n  (_peek [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_set-state [this oldstate newstate]\n    (when-not (identical? oldstate newstate)\n      (set! state newstate)\n      (when (some? watches)\n        (notify-w this oldstate newstate))))\n\n  IDeref\n  (-deref [this]\n    (let [oldstate state\n          newstate (if-some [r reaction]\n                     (-deref r)\n                     (let [f (if (satisfies? IDeref ratom)\n                               #(get-in @ratom path)\n                               #(ratom path))]\n                       (cached-reaction f ratom path this nil)))]\n      (._set-state this oldstate newstate)\n      newstate))\n\n  IReset\n  (-reset! [this new-value]\n    (let [oldstate state]\n      (._set-state this oldstate new-value)\n      (if (satisfies? IDeref ratom)\n        (if (= path [])\n          (reset! ratom new-value)\n          (swap! ratom assoc-in path new-value))\n        (ratom path new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek a))))\n  (-swap! [a f x]        (-reset! a (f (._peek a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek a) x y more)))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Cursor: \" path)))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [_] (hash [ratom path])))\n\n(defn cursor\n  [src path]\n  (assert (or (satisfies? IReactiveAtom src)\n              (and (ifn? src)\n                   (not (vector? src))))\n          (str \"src must be a reactive atom or a function, not \"\n               (pr-str src)))\n  (->RCursor src path nil nil nil))\n\n\n;;; with-let support\n\n(defn with-let-destroy [v]\n  (when-some [f (.-destroy v)]\n    (f)))\n\n(defn with-let-values [key]\n  (if-some [c *ratom-context*]\n    (cached-reaction array c key\n                     nil with-let-destroy)\n    (array)))\n\n\n;;;; reaction\n\n(defprotocol IDisposable\n  (dispose! [this])\n  (add-on-dispose! [this f]))\n\n(defprotocol IRunnable\n  (run [this]))\n\n(defn- handle-reaction-change [this sender old new]\n  (._handle-change this sender old new))\n\n\n(deftype Reaction [f ^:mutable state ^:mutable ^boolean dirty? ^boolean nocache?\n                   ^:mutable watching ^:mutable watches ^:mutable auto-run\n                   ^:mutable caught]\n  IAtom\n  IReactiveAtom\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]\n    (let [was-empty (empty? watches)]\n      (remove-w this key)\n      (when (and (not was-empty)\n                 (empty? watches)\n                 (nil? auto-run))\n        (dispose! this))))\n\n  IReset\n  (-reset! [a newval]\n    (assert (fn? (.-on-set a)) \"Reaction is read only; on-set is not allowed\")\n    (let [oldval state]\n      (set! state newval)\n      (.on-set a oldval newval)\n      (notify-w a oldval newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek-at a))))\n  (-swap! [a f x]        (-reset! a (f (._peek-at a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek-at a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek-at a) x y more)))\n\n  Object\n  (_peek-at [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_handle-change [this sender oldval newval]\n    (when-not (or (identical? oldval newval)\n                  dirty?)\n      (if (nil? auto-run)\n        (do\n          (set! dirty? true)\n          (rea-enqueue this))\n        (if (true? auto-run)\n          (._run this false)\n          (auto-run this)))))\n\n  (_update-watching [this derefed]\n    (let [new (set derefed)\n          old (set watching)]\n      (set! watching derefed)\n      (doseq [w (s/difference new old)]\n        (-add-watch w this handle-reaction-change))\n      (doseq [w (s/difference old new)]\n        (-remove-watch w this))))\n\n  (_queued-run [this]\n    (when (and dirty? (some? watching))\n      (._run this true)))\n\n  (_try-capture [this f]\n    (try\n      (set! caught nil)\n      (deref-capture f this)\n      (catch :default e\n        (set! state e)\n        (set! caught e)\n        (set! dirty? false))))\n\n  (_run [this check]\n    (let [oldstate state\n          res (if check\n                (._try-capture this f)\n                (deref-capture f this))]\n      (when-not nocache?\n        (set! state res)\n        ;; Use = to determine equality from reactions, since\n        ;; they are likely to produce new data structures.\n        (when-not (or (nil? watches)\n                      (= oldstate res))\n          (notify-w this oldstate res)))\n      res))\n\n  (_set-opts [this {:keys [auto-run on-set on-dispose no-cache]}]\n    (when (some? auto-run)\n      (set! (.-auto-run this) auto-run))\n    (when (some? on-set)\n      (set! (.-on-set this) on-set))\n    (when (some? on-dispose)\n      (set! (.-on-dispose this) on-dispose))\n    (when (some? no-cache)\n      (set! (.-nocache? this) no-cache)))\n\n  IRunnable\n  (run [this]\n    (flush!)\n    (._run this false))\n\n  IDeref\n  (-deref [this]\n    (when-some [e caught]\n      (throw e))\n    (let [non-reactive (nil? *ratom-context*)]\n      (when non-reactive\n        (flush!))\n      (if (and non-reactive (nil? auto-run))\n        (when dirty?\n          (let [oldstate state]\n            (set! state (f))\n            (when-not (or (nil? watches) (= oldstate state))\n              (notify-w this oldstate state))))\n        (do\n          (notify-deref-watcher! this)\n          (when dirty?\n            (._run this false)))))\n    state)\n\n  IDisposable\n  (dispose! [this]\n    (let [s state\n          wg watching]\n      (set! watching nil)\n      (set! state nil)\n      (set! auto-run nil)\n      (set! dirty? true)\n      (doseq [w (set wg)]\n        (-remove-watch w this))\n      (when (some? (.-on-dispose this))\n        (.on-dispose this s))\n      (when-some [a (.-on-dispose-arr this)]\n        (dotimes [i (alength a)]\n          ((aget a i) this)))))\n\n  (add-on-dispose! [this f]\n    ;; f is called with the reaction as argument when it is no longer active\n    (if-some [a (.-on-dispose-arr this)]\n      (.push a f)\n      (set! (.-on-dispose-arr this) (array f))))\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Reaction \" (hash a) \":\")))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n\n(defn make-reaction [f & {:keys [auto-run on-set on-dispose]}]\n  (let [reaction (->Reaction f nil true false nil nil nil nil)]\n    (._set-opts reaction {:auto-run auto-run\n                          :on-set on-set\n                          :on-dispose on-dispose})\n    reaction))\n\n\n\n(def ^:private temp-reaction (make-reaction nil))\n\n(defn run-in-reaction [f obj key run opts]\n  (let [r temp-reaction\n        res (deref-capture f r)]\n    (when-not (nil? (.-watching r))\n      (set! temp-reaction (make-reaction nil))\n      (._set-opts r opts)\n      (set! (.-f r) f)\n      (set! (.-auto-run r) #(run obj))\n      (aset obj key r))\n    res))\n\n(defn check-derefs [f]\n  (let [ctx (js-obj)\n        res (in-context ctx f)]\n    [res (some? (.-captured ctx))]))\n\n\n;;; wrap\n\n(deftype Wrapper [^:mutable state callback ^:mutable ^boolean changed\n                  ^:mutable watches]\n\n  IAtom\n\n  IDeref\n  (-deref [this]\n    (when (dev?)\n      (when (and changed (some? *ratom-context*))\n        (warn \"derefing stale wrap: \"\n              (pr-str this))))\n    state)\n\n  IReset\n  (-reset! [this newval]\n    (let [oldval state]\n      (set! changed true)\n      (set! state newval)\n      (when (some? watches)\n        (notify-w this oldval newval))\n      (callback newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IEquiv\n  (-equiv [_ other]\n          (and (instance? Wrapper other)\n               ;; If either of the wrappers have changed, equality\n               ;; cannot be relied on.\n               (not changed)\n               (not (.-changed other))\n               (= state (.-state other))\n               (= callback (.-callback other))))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Wrap:\")))\n\n(defn make-wrapper [value callback-fn args]\n  (->Wrapper value\n             (util/make-partial-fn callback-fn args)\n             false nil))\n\n\n\n\n#_(do\n  (defn ratom-perf []\n    (set! debug false)\n    (dotimes [_ 10]\n      (let [nite 100000\n            a (atom 0)\n            f (fn []\n                (quot @a 10))\n            mid (make-reaction f)\n            res (track! (fn []\n                          ;; (with-let [x 1])\n                          ;; @(track f)\n                          (inc @mid)\n                          ))]\n        @res\n        (time (dotimes [x nite]\n                (swap! a inc)\n                (flush!)))\n        (dispose! res))))\n  (ratom-perf))\n","~:reader-features",["^O",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["js/reagent","js/reagent.ratom","js/reagent.ratom.debug","reagent.ratom/debug","js/reagent.ratom.generation","reagent.ratom/generation","js/reagent.ratom.-running","reagent.ratom/-running","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","reagent.ratom/reactive?","reagent.ratom/*ratom-context*","reagent.ratom/running","cljs.core/deref","reagent.ratom/arr-len","x","reagent.ratom/arr-eq","y","len","i","or__4185__auto__","reagent.ratom/in-context","obj","f","*ratom-context*-orig-val__36718","*ratom-context*-temp-val__36719","reagent.ratom/deref-capture","r","res","c","reagent.ratom/notify-deref-watcher!","derefed","temp__5739__auto__","reagent.ratom/check-watches","old","new","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/+","cljs.core/count","reagent.ratom/add-w","this","key","w","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","reagent.ratom/remove-w","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","reagent.ratom/notify-w","a","p1__36744#","p2__36745#","p3__36746#","cljs.core/reduce-kv","G__36748","k","reagent.ratom/pr-atom","writer","opts","s","cljs.core/-write","cljs.core/pr-writer","*ratom-context*-orig-val__36751","*ratom-context*-temp-val__36752","cljs.core/-deref","js/reagent.ratom.rea-queue","reagent.ratom/rea-queue","reagent.ratom/rea-enqueue","reagent.impl.batching/schedule","reagent.ratom/flush!","q","n__4666__auto__","reagent.impl.batching/ratom-flush","reagent.ratom/IReactiveAtom","cljs.core/PROTOCOL_SENTINEL","this__4428__auto__","writer__4429__auto__","opt__4430__auto__","reagent.ratom/RAtom","reagent.ratom/->RAtom","state","meta","validator","watches","o","other","new-value","js/Error","old-value","cljs.core/-reset!","more","cljs.core.apply.cljs$core$IFn$_invoke$arity$5","_","new-meta","goog/getUid","var_args","G__36774","reagent.ratom/atom","args-arr__4810__auto__","len__4789__auto__","i__4790__auto__","argseq__4811__auto__","cljs.core/IndexedSeq","p__36777","map__36778","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","seq36771","G__36772","cljs.core/first","cljs.core/next","self__4776__auto__","reagent.ratom/cache-key","reagent.ratom/cached-reaction","destroy","m","G__36783","G__36784","G__36785","reagent.ratom/make-reaction","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","cljs.core/dec","v","cljs.core/inc","reagent.ratom/Track","reagent.ratom/->Track","args","reaction","temp__5737__auto__","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/hash","reagent.ratom/make-track","reagent.ratom/make-track!","t","G__36800","G__36801","G__36802","args__4795__auto__","argseq__4796__auto__","reagent.ratom/track","seq36806","G__36807","cljs.core/ifn?","reagent.ratom/track!","seq36811","G__36812","reagent.ratom/RCursor","reagent.ratom/->RCursor","ratom","path","*ratom-context*-orig-val__36814","*ratom-context*-temp-val__36815","oldstate","newstate","cljs.core/native-satisfies?","cljs.core/IDeref","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","cljs.core/reset!","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc-in","G__36823","G__36825","G__36826","G__36827","G__36828","G__36829","reagent.ratom/cursor","src","cljs.core/vector?","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","reagent.ratom/with-let-destroy","reagent.ratom/with-let-values","cljs.core/array","x__4487__auto__","m__4488__auto__","reagent.ratom/dispose!","goog/typeOf","m__4485__auto__","cljs.core/missing-protocol","reagent.ratom/add-on-dispose!","reagent.ratom/IDisposable","reagent.ratom/run","reagent.ratom/IRunnable","reagent.ratom/handle-reaction-change","sender","p__36900","map__36901","reagent.ratom/Reaction","reagent.ratom/->Reaction","dirty?","nocache?","watching","auto-run","caught","was-empty","cljs.core/empty?","newval","cljs.core/fn?","oldval","G__36981","G__36997","G__36998","G__37002","G__37003","G__37004","*ratom-context*-orig-val__36867","*ratom-context*-temp-val__36868","cljs.core/set","seq__36876","cljs.core/seq","chunk__36877","count__36878","i__36879","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","temp__5735__auto__","cljs.core/chunked-seq?","c__4609__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","clojure.set.difference.cljs$core$IFn$_invoke$arity$2","cljs.core/-add-watch","seq__36894","chunk__36895","count__36896","i__36897","cljs.core/-remove-watch","e36899","e","check","on-set","on-dispose","no-cache","non-reactive","wg","seq__36919","chunk__36920","count__36921","i__36922","fexpr__36945","p__37118","map__37119","seq37100","G__37101","reagent.ratom/temp-reaction","reagent.ratom/run-in-reaction","run","reagent.ratom/check-derefs","ctx","reagent.ratom/Wrapper","reagent.ratom/->Wrapper","callback","changed","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","cljs.core/not","reagent.ratom/make-wrapper","value","callback-fn","reagent.impl.util/make-partial-fn"]]],"~:cache-keys",["~#cmap",[["^1L","reagent/impl/batching.cljs"],[1543639330000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^O",[]],"~:deps-syms",["^18","^17","^H","~$reagent.interop","^16","~$clojure.string"]]],["^1L","goog/dom/tagname.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","~$goog.dom.HtmlElement"]]],["^1L","goog/math/math.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","~$goog.array","~$goog.asserts"]]],["^1L","goog/html/trustedtypes.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18"]]],["^1L","goog/labs/useragent/browser.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^24","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1L","goog/html/safeurl.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^25","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^28"]]],["^1L","goog/array/array.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^25"]]],["^1L","reagent/impl/util.cljs"],[1543639330000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^17","^H","^21","^22"]]],["^1L","goog/debug/error.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18"]]],["^1L","goog/dom/nodetype.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18"]]],["^1L","reagent/ratom.cljs"],[1543639330000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^17","^16","^H","^19","^1:"]]],["^1L","goog/string/typedstring.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18"]]],["^1L","goog/object/object.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18"]]],["^1L","goog/dom/asserts.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^25"]]],"~:SHADOW-TIMESTAMP",[1574367148000,1574367144000],["^1L","goog/math/long.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^25","~$goog.reflect"]]],["^1L","goog/html/trustedresourceurl.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^25","~$goog.html.trustedtypes","^2;","^2<","^2=","^2>"]]],["^1L","goog/string/internal.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18"]]],["^1L","goog/functions/functions.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18"]]],["^1L","goog/html/safestyle.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^24","^25","~$goog.html.SafeUrl","^2=","^2>","^28"]]],["^1L","goog/dom/safe.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^25","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2B","^2:","~$goog.html.uncheckedconversions","^2=","^28"]]],["^1L","goog/structs/map.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1L","goog/html/safehtml.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^24","^25","~$goog.dom.TagName","~$goog.dom.tags","^2F","^2G","~$goog.html.SafeStyleSheet","^2B","^2:","^2A","^2;","^2<","~$goog.labs.userAgent.browser","^27","^2=","^2>","^28"]]],["^1L","goog/dom/tags.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^27"]]],["^1L","goog/asserts/asserts.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1L","goog/uri/uri.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^24","^25","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1L","goog/i18n/bidi.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18"]]],["^1L","goog/fs/url.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18"]]],["^1L","goog/base.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",[]]],["^1L","goog/structs/structs.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^24","^27"]]],["^1L","clojure/string.cljs"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^17","^2Q","~$goog.string.StringBuffer"]]],["^1L","goog/string/string.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","~$goog.dom.safe","^2H","^2=","^28"]]],["^1L","goog/reflect/reflect.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18"]]],["^1L","goog/labs/useragent/util.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^28"]]],["^1L","goog/string/stringbuffer.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18"]]],["^1L","goog/iter/iter.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^24","^25","^2D","~$goog.math"]]],["^1L","goog/html/uncheckedconversions.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^25","^2E","^2F","^2G","^2M","^2B","^2:","^2=","^28"]]],["^1L","reagent/interop.cljs"],[1543639330000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^17"]]],["^1L","goog/dom/htmlelement.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18"]]],["^1L","cljs/core.cljs"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["~$goog.math.Long","~$goog.math.Integer","^2Q","^27","^24","~$goog.Uri","^2W"]]],["^1L","goog/html/safescript.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^25","^2A","^2=","^2>"]]],["^1L","reagent/debug.cljs"],[1543639330000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^17"]]],["^1L","goog/html/safestylesheet.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^24","^25","^2G","^27","^2=","^2>","^28"]]],["^1L","goog/math/integer.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^2@"]]],["^1L","clojure/set.cljs"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^17"]]],["^1L","goog/uri/utils.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^24","^25","^2Q"]]],["^1L","goog/string/const.js"],[1574367144000,"^1Y",["^ ","^1Z",null,"^1[",["^O",[]],"^20",["^18","^25","^2>"]]]]],"~:clj-info",["^ ","jar:file:/Users/bryanmaass/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer.cljc",1574367144000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1560525188000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map.clj",1574367144000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1543639336000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1560525188000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1515727491000,"jar:file:/Users/bryanmaass/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/interop.clj",1543639330000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1543639336000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/util.cljc",1574367144000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1560525188000,"jar:file:/Users/bryanmaass/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/debug.clj",1543639330000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1560525188000,"jar:file:/Users/bryanmaass/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/ratom.clj",1543639330000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/js_deps.cljc",1574367144000,"jar:file:/Users/bryanmaass/.m2/repository/binaryage/devtools/0.9.7/devtools-0.9.7.jar!/devtools/defaults.clj",1521503194000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1560525188000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/tagged_literals.cljc",1574367144000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env.cljc",1574367144000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1543639336000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/core.cljc",1574367144000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1560525188000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/compiler.cljc",1574367144000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1560525188000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64_vlq.clj",1574367144000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/externs.clj",1574367144000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1543639336000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64.clj",1574367144000,"jar:file:/Users/bryanmaass/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1543639336000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/ratom.cljs","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"~:shadow/protocol-prefixes",["^O",["reagent$ratom$IRunnable$","reagent$ratom$IDisposable$"]],"^D",["^ ","^E","^F","^G","^H","^I","^H","^J","^H","^K","^H","^L","^H","^M","^H"],"^N",["^O",["^P"]],"^Q",["^ ","^E",["^ ","^R",["^S",[["^T","~$&","^U"]]],"^7",17,"^8",1,"^6","reagent/ratom.clj","^V","^W","^X","^F","^Y",true],"^Z",["^ ","^R",["^S",[["~$&","^U"]]],"^7",5,"^8",1,"^6","reagent/ratom.clj","^V","^[","^X","^F","^Y",true],"^10",["^ ","^R",["^S",[["~$&","^U"]]],"^11","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",9,"^8",1,"^6","reagent/ratom.clj","^V","^12","^X","^F","^Y",true]],"~:shadow/js-access-properties",["^O",["_run","_peek-at","_update-watching","_queued-run","_set-opts","_peek","_set-state","_handle-change","_try-capture"]],"^V","^F","^14",null,"^15",["^ ","^16","^16","^17","^17","^18","^18","^19","^19","^1:","^1:","^1;","^16","~$s","^1:","^1<","^19","^H","^H"],"^1=",["^O",["^1>","^1?"]],"~:shadow/js-access-global",["^O",["Error"]],"^1@",null,"~:defs",["^ ","~$pr-atom",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",89,"^8",8,"^9",89,"^:",15,"~:private",true,"^R",["^S",["~$quote",["^S",[["~$a","~$writer","~$opts","~$s"]]]]]],"^3U",true,"^V","~$reagent.ratom/pr-atom","^6","reagent/ratom.cljs","^:",15,"~:method-params",["^S",[["~$a","^3W","^3X","~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^S",[null,null]],"^8",1,"~:variadic?",false,"^7",89,"~:ret-tag","~$any","^9",89,"~:max-fixed-arity",4,"~:fn-var",true,"^R",["^S",["^3V",["^S",[["~$a","^3W","^3X","~$s"]]]]]],"~$->RCursor",["^ ","^3T",null,"^5",["^ ","~:protocols",["^O",["~$cljs.core/IWatchable","~$cljs.core/IAtom","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/Object","~$cljs.core/IReset","~$cljs.core/ISwap","~$reagent.ratom/IReactiveAtom","~$cljs.core/IDeref","~$cljs.core/IPrintWithWriter"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"~:factory","~:positional","^7",243,"^9",243,"^R",["^S",["^3V",["^S",[["~$ratom","~$path","^Z","~$state","~$watches"]]]]],"~:skip-protocol-flag",["^O",["^48","^49","^4:","^4;","^4=","^4>","^4@","^4A"]],"^11","Positional factory function for reagent.ratom/RCursor."],"^47",["^O",["^48","^49","^4:","^4;","^4<","^4=","^4>","^4?","^4@","^4A"]],"^V","~$reagent.ratom/->RCursor","^6","reagent/ratom.cljs","^:",17,"^3Z",["^S",[["^4D","^4E","^Z","^4F","^4G"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^4B","^4C","^7",243,"^42","~$reagent.ratom/RCursor","^9",243,"^44",5,"^45",true,"^R",["^S",["^3V",["^S",[["^4D","^4E","^Z","^4F","^4G"]]]]],"^4H",["^O",["^48","^49","^4:","^4;","^4=","^4>","^4@","^4A"]],"^11","Positional factory function for reagent.ratom/RCursor."],"~$notify-deref-watcher!",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",51,"^8",8,"^9",51,"^:",29,"^3U",true,"^R",["^S",["^3V",["^S",[["~$derefed"]]]]]],"^3U",true,"^V","~$reagent.ratom/notify-deref-watcher!","^6","reagent/ratom.cljs","^:",29,"^3Z",["^S",[["^4L"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",51,"^42",["^O",[null,"^43","~$clj-nil"]],"^9",51,"^44",1,"^45",true,"^R",["^S",["^3V",["^S",[["^4L"]]]]]],"~$rea-enqueue",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",99,"^8",8,"^9",99,"^:",19,"^3U",true,"^R",["^S",["^3V",["^S",[["~$r"]]]]]],"^3U",true,"^V","~$reagent.ratom/rea-enqueue","^6","reagent/ratom.cljs","^:",19,"^3Z",["^S",[["~$r"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",99,"^42","^43","^9",99,"^44",1,"^45",true,"^R",["^S",["^3V",["^S",[["~$r"]]]]]],"~$in-context",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",35,"^8",8,"^9",35,"^:",18,"^3U",true,"^R",["^S",["^3V",["^S",[["~$obj","~$f"]]]]]],"^3U",true,"^V","~$reagent.ratom/in-context","^6","reagent/ratom.cljs","^:",18,"^3Z",["^S",[["^4R","~$f"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",35,"^9",35,"^44",2,"^45",true,"^R",["^S",["^3V",["^S",[["^4R","~$f"]]]]]],"~$make-track",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",223,"^8",7,"^9",223,"^:",17,"^R",["^S",["^3V",["^S",[["~$f","~$args"]]]]]],"^V","~$reagent.ratom/make-track","^6","reagent/ratom.cljs","^:",17,"^3Z",["^S",[["~$f","^4U"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",223,"^42","~$reagent.ratom/Track","^9",223,"^44",2,"^45",true,"^R",["^S",["^3V",["^S",[["~$f","^4U"]]]]]],"~$RAtom",["^ ","~:num-fields",4,"^47",["^O",["^48","^49","^4:","^4;","^4=","^4>","^4?","~$cljs.core/IMeta","^4@","^4A","~$cljs.core/IWithMeta"]],"^V","~$reagent.ratom/RAtom","^6","reagent/ratom.cljs","^:",15,"~:type",true,"^8",10,"^7",121,"~:record",false,"^9",121,"~:tag","~$function","^4H",["^O",["^48","^49","^4:","^4;","^4=","^4>","^4Z","^4@","^4A","^4["]]],"^P",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",166,"^8",7,"^9",166,"^:",11,"^R",["^S",["^3V",["^S",[["~$x"],["~$x","~$&",["^ ","~:keys",["~$meta","~$validator"]]]]]]],"^11","Like clojure.core/atom, except that it keeps track of derefs.","~:top-fn",["^ ","^41",true,"~:fixed-arity",1,"^44",1,"^3Z",["^S",[["~$x"]]],"^R",["^S",[["~$x"],["~$x","~$&",["^ ","^55",["^56","^57"]]]]],"^40",["^S",[null,null]]]],"^V","~$reagent.ratom/atom","^6","reagent/ratom.cljs","^:",11,"^58",["^ ","^41",true,"^59",1,"^44",1,"^3Z",["^S",[["~$x"]]],"^R",["^S",[["~$x"],["~$x","~$&",["^ ","^55",["^56","^57"]]]]],"^40",["^S",[null,null]]],"^3Z",["^S",[["~$x"]]],"^3[",null,"^59",1,"^40",["^S",[null,null]],"^8",1,"^41",true,"~:methods",[["^ ","^59",1,"^41",false,"^53","^50"],["^ ","^59",1,"^41",true,"^53","^50"]],"^7",166,"^9",166,"^44",1,"^45",true,"^R",["^S",[["~$x"],["~$x","~$&",["^ ","^55",["^56","^57"]]]]],"^11","Like clojure.core/atom, except that it keeps track of derefs."],"~$notify-w",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",73,"^8",8,"^9",73,"^:",16,"^3U",true,"^R",["^S",["^3V",["^S",[["~$this","~$old","~$new"]]]]]],"^3U",true,"^V","~$reagent.ratom/notify-w","^6","reagent/ratom.cljs","^:",16,"^3Z",["^S",[["^5=","^5>","^5?"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",73,"^42","^4N","^9",73,"^44",3,"^45",true,"^R",["^S",["^3V",["^S",[["^5=","^5>","^5?"]]]]]],"~$->Reaction",["^ ","^3T",null,"^5",["^ ","^47",["^O",["^48","^49","^4:","^4;","^4<","^4=","^4>","^4?","~$reagent.ratom/IRunnable","~$reagent.ratom/IDisposable","^4@","^4A"]],"^6","reagent/ratom.cljs","^:",18,"^8",10,"^4B","^4C","^7",341,"^9",341,"^R",["^S",["^3V",["^S",[["~$f","^4F","~$dirty?","~$nocache?","~$watching","^4G","~$auto-run","~$caught"]]]]],"^4H",["^O",["^48","^49","^4:","^4;","^4=","^4>","^4@","^4A"]],"^11","Positional factory function for reagent.ratom/Reaction."],"^47",["^O",["^48","^49","^4:","^4;","^4<","^4=","^4>","^4?","^5B","^5C","^4@","^4A"]],"^V","~$reagent.ratom/->Reaction","^6","reagent/ratom.cljs","^:",18,"^3Z",["^S",[["~$f","^4F","^5D","^5E","^5F","^4G","^5G","^5H"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^4B","^4C","^7",341,"^42","~$reagent.ratom/Reaction","^9",341,"^44",8,"^45",true,"^R",["^S",["^3V",["^S",[["~$f","^4F","^5D","^5E","^5F","^4G","^5G","^5H"]]]]],"^4H",["^O",["^48","^49","^4:","^4;","^4=","^4>","^4@","^4A"]],"^11","Positional factory function for reagent.ratom/Reaction."],"~$make-wrapper",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",568,"^8",7,"^9",568,"^:",19,"^R",["^S",["^3V",["^S",[["~$value","~$callback-fn","^4U"]]]]]],"^V","~$reagent.ratom/make-wrapper","^6","reagent/ratom.cljs","^:",19,"^3Z",["^S",[["^5L","^5M","^4U"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",568,"^42","~$reagent.ratom/Wrapper","^9",568,"^44",3,"^45",true,"^R",["^S",["^3V",["^S",[["^5L","^5M","^4U"]]]]]],"~$IReactiveAtom",["^ ","^5",["^ ","~:protocol-symbol",true,"^6","reagent/ratom.cljs","^:",27,"^8",14,"^7",119,"~:protocol-info",["^ ","^5;",["^ "]],"^9",119,"~:sigs",["^ "],"~:jsdoc",["^S",["@interface"]]],"^5Q",true,"^V","^4?","^6","reagent/ratom.cljs","^:",27,"^8",1,"^7",119,"^5R",["^ ","^5;",["^ "]],"~:info",null,"^9",119,"^53","^43","^5S",["^ "],"~:impls",["^O",["^4J","^4W","^5J","^50"]],"^5T",["^S",["@interface"]]],"~$track",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",233,"^8",7,"^9",233,"^:",12,"^R",["^S",["^3V",["^S",[["~$f","~$&","^4U"]]]]],"^58",["^ ","^41",true,"^59",1,"^44",1,"^3Z",[["^S",["~$f","^4U"]]],"^R",["^S",[["~$f","~$&","^4U"]]],"^40",["^S",[null]]]],"^V","~$reagent.ratom/track","^6","reagent/ratom.cljs","^:",12,"^58",["^ ","^41",true,"^59",1,"^44",1,"^3Z",[["^S",["~$f","^4U"]]],"^R",["^S",[["~$f","~$&","^4U"]]],"^40",["^S",[null]]],"^3Z",[["^S",["~$f","^4U"]]],"^3[",null,"^59",1,"^40",["^S",[null]],"^8",1,"^41",true,"^5;",[["^ ","^59",1,"^41",true,"^53","^4W"]],"^7",233,"^42","^43","^9",233,"^44",1,"^45",true,"^R",["^S",[["~$f","~$&","^4U"]]]],"~$dispose!",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",331,"^8",4,"^9",331,"^:",12,"~:protocol","^5C","^11",null,"^R",["^S",["^3V",["^S",[["^5="]]]]]],"^5Z","^5C","^V","~$reagent.ratom/dispose!","^6","reagent/ratom.cljs","^:",12,"^3Z",["^S",[["^5="]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",330,"^42","^43","^9",331,"^44",1,"^45",true,"^R",["^S",["^3V",["^S",[["^5="]]]]],"^11",null],"~$arr-eq",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",26,"^8",17,"^9",26,"^:",23,"^53","~$boolean","^3U",true,"^R",["^S",["^3V",["^S",[["~$x","~$y"]]]]]],"^3U",true,"^V","~$reagent.ratom/arr-eq","^6","reagent/ratom.cljs","^:",23,"^3Z",["^S",[["~$x","~$y"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",26,"^42","^61","^9",26,"^44",2,"^53","^61","^45",true,"^R",["^S",["^3V",["^S",[["~$x","~$y"]]]]]],"~$handle-reaction-change",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",337,"^8",8,"^9",337,"^:",30,"^3U",true,"^R",["^S",["^3V",["^S",[["^5=","~$sender","^5>","^5?"]]]]]],"^3U",true,"^V","~$reagent.ratom/handle-reaction-change","^6","reagent/ratom.cljs","^:",30,"^3Z",["^S",[["^5=","^64","^5>","^5?"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",337,"^42","^43","^9",337,"^44",4,"^45",true,"^R",["^S",["^3V",["^S",[["^5=","^64","^5>","^5?"]]]]]],"~$run",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",335,"^8",4,"^9",335,"^:",7,"^5Z","^5B","^11",null,"^R",["^S",["^3V",["^S",[["^5="]]]]]],"^5Z","^5B","^V","~$reagent.ratom/run","^6","reagent/ratom.cljs","^:",7,"^3Z",["^S",[["^5="]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",334,"^42","^43","^9",335,"^44",1,"^45",true,"^R",["^S",["^3V",["^S",[["^5="]]]]],"^11",null],"~$add-on-dispose!",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",332,"^8",4,"^9",332,"^:",19,"^5Z","^5C","^11",null,"^R",["^S",["^3V",["^S",[["^5=","~$f"]]]]]],"^5Z","^5C","^V","~$reagent.ratom/add-on-dispose!","^6","reagent/ratom.cljs","^:",19,"^3Z",["^S",[["^5=","~$f"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",330,"^42","^43","^9",332,"^44",2,"^45",true,"^R",["^S",["^3V",["^S",[["^5=","~$f"]]]]],"^11",null],"~$temp-reaction",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",500,"^8",16,"^9",500,"^:",29,"^3U",true],"^3U",true,"^V","~$reagent.ratom/temp-reaction","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",500,"^9",500,"^53","^5J"],"~$cache-key",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",176,"^8",35,"^9",176,"^:",44,"^3U",true,"~:const",true],"^3U",true,"^V","~$reagent.ratom/cache-key","^6","reagent/ratom.cljs","^:",44,"~:const-expr",["^ ","^13","^6=","~:val","reagReactionCache","~:env",["^ ","~:context","~:expr"],"^1A","reagReactionCache","^53","~$string"],"^8",1,"^6=",true,"^7",176,"^9",176,"^53","^6D"],"~$make-track!",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",226,"^8",7,"^9",226,"^:",18,"^R",["^S",["^3V",["^S",[["~$f","^4U"]]]]]],"^V","~$reagent.ratom/make-track!","^6","reagent/ratom.cljs","^:",18,"^3Z",["^S",[["~$f","^4U"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",226,"^42","^43","^9",226,"^44",2,"^45",true,"^R",["^S",["^3V",["^S",[["~$f","^4U"]]]]]],"~$generation",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",11,"^8",20,"^9",11,"^:",30,"^3U",true],"^3U",true,"^V","~$reagent.ratom/generation","^6","reagent/ratom.cljs","^:",30,"^8",1,"^7",11,"^9",11,"^53","~$number"],"~$run-in-reaction",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",502,"^8",7,"^9",502,"^:",22,"^R",["^S",["^3V",["^S",[["~$f","^4R","~$key","^66","^3X"]]]]]],"^V","~$reagent.ratom/run-in-reaction","^6","reagent/ratom.cljs","^:",22,"^3Z",["^S",[["~$f","^4R","^6K","^66","^3X"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",502,"^42","^43","^9",502,"^44",5,"^45",true,"^R",["^S",["^3V",["^S",[["~$f","^4R","^6K","^66","^3X"]]]]]],"~$IDisposable",["^ ","^5",["^ ","^5Q",true,"^6","reagent/ratom.cljs","^:",25,"^8",14,"^7",330,"^5R",["^ ","^5;",["^ ","^5Y",[["^5="]],"^68",[["^5=","~$f"]]]],"^9",330,"^5S",["^ ","~:dispose!",["^ ","^V","^5Y","^R",["^S",[["^5="]]],"^11",null],"~:add-on-dispose!",["^ ","^V","^68","^R",["^S",[["^5=","~$f"]]],"^11",null]],"^5T",["^S",["@interface"]]],"^5Q",true,"^V","^5C","^6","reagent/ratom.cljs","^:",25,"^8",1,"^7",330,"^5R",["^ ","^5;",["^ ","^5Y",[["^5="]],"^68",[["^5=","~$f"]]]],"^5U",null,"^9",330,"^53","^43","^5S",["^ ","^6N",["^ ","^V","^5Y","^R",["^S",[["^5="]]],"^11",null],"^6O",["^ ","^V","^68","^R",["^S",[["^5=","~$f"]]],"^11",null]],"^5V",["^O",["^5J"]],"^5T",["^S",["@interface"]]],"~$check-watches",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",58,"^8",8,"^9",58,"^:",21,"^3U",true,"^R",["^S",["^3V",["^S",[["^5>","^5?"]]]]]],"^3U",true,"^V","~$reagent.ratom/check-watches","^6","reagent/ratom.cljs","^:",21,"^3Z",["^S",[["^5>","^5?"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",58,"^9",58,"^44",2,"^45",true,"^R",["^S",["^3V",["^S",[["^5>","^5?"]]]]]],"~$with-let-destroy",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",317,"^8",7,"^9",317,"^:",23,"^R",["^S",["^3V",["^S",[["~$v"]]]]]],"^V","~$reagent.ratom/with-let-destroy","^6","reagent/ratom.cljs","^:",23,"^3Z",["^S",[["~$v"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",317,"^42",["^O",["^43","^4N"]],"^9",317,"^44",1,"^45",true,"^R",["^S",["^3V",["^S",[["~$v"]]]]]],"~$make-reaction",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",491,"^8",7,"^9",491,"^:",20,"^R",["^S",["^3V",["^S",[["~$f","~$&",["^ ","^55",["^5G","~$on-set","~$on-dispose"]]]]]]],"^58",["^ ","^41",true,"^59",1,"^44",1,"^3Z",[["^S",["~$f",["^ ","^55",["^5G","^6U","^6V"]]]]],"^R",["^S",[["~$f","~$&",["^ ","^55",["^5G","^6U","^6V"]]]]],"^40",["^S",[null]]]],"^V","~$reagent.ratom/make-reaction","^6","reagent/ratom.cljs","^:",20,"^58",["^ ","^41",true,"^59",1,"^44",1,"^3Z",[["^S",["~$f",["^ ","^55",["^5G","^6U","^6V"]]]]],"^R",["^S",[["~$f","~$&",["^ ","^55",["^5G","^6U","^6V"]]]]],"^40",["^S",[null]]],"^3Z",[["^S",["~$f",["^ ","^55",["^5G","^6U","^6V"]]]]],"^3[",null,"^59",1,"^40",["^S",[null]],"^8",1,"^41",true,"^5;",[["^ ","^59",1,"^41",true,"^53","^5J"]],"^7",491,"^42","^43","^9",491,"^44",1,"^45",true,"^R",["^S",[["~$f","~$&",["^ ","^55",["^5G","^6U","^6V"]]]]]],"~$add-w",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",63,"^8",8,"^9",63,"^:",13,"^3U",true,"^R",["^S",["^3V",["^S",[["^5=","^6K","~$f"]]]]]],"^3U",true,"^V","~$reagent.ratom/add-w","^6","reagent/ratom.cljs","^:",13,"^3Z",["^S",[["^5=","^6K","~$f"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",63,"^9",63,"^44",3,"^45",true,"^R",["^S",["^3V",["^S",[["^5=","^6K","~$f"]]]]]],"~$Reaction",["^ ","^4Y",8,"^47",["^O",["^48","^49","^4:","^4;","^4<","^4=","^4>","^4?","^5B","^5C","^4@","^4A"]],"^V","^5J","^6","reagent/ratom.cljs","^:",18,"^51",true,"^8",10,"^7",341,"^52",false,"^9",341,"^53","^54","^4H",["^O",["^48","^49","^4:","^4;","^4=","^4>","^4@","^4A"]]],"~$flush!",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",105,"^8",7,"^9",105,"^:",13,"^R",["^S",["^3V",["^S",[[]]]]]],"^V","~$reagent.ratom/flush!","^6","reagent/ratom.cljs","^:",13,"^3Z",["^S",[[]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",105,"^42","^4N","^9",105,"^44",0,"^45",true,"^R",["^S",["^3V",["^S",[[]]]]]],"~$RCursor",["^ ","^4Y",5,"^47",["^O",["^48","^49","^4:","^4;","^4<","^4=","^4>","^4?","^4@","^4A"]],"^V","^4J","^6","reagent/ratom.cljs","^:",17,"^51",true,"^8",10,"^7",243,"^52",false,"^9",243,"^53","^54","^4H",["^O",["^48","^49","^4:","^4;","^4=","^4>","^4@","^4A"]]],"~$cached-reaction",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",178,"^8",8,"^9",178,"^:",23,"^3U",true,"^R",["^S",["^3V",["^S",[["~$f","~$o","~$k","^4R","~$destroy"]]]]]],"^3U",true,"^V","~$reagent.ratom/cached-reaction","^6","reagent/ratom.cljs","^:",23,"^3Z",["^S",[["~$f","~$o","~$k","^4R","^73"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",178,"^42","^43","^9",178,"^44",5,"^45",true,"^R",["^S",["^3V",["^S",[["~$f","~$o","~$k","^4R","^73"]]]]]],"~$Track",["^ ","^4Y",3,"^47",["^O",["^4:","^4;","^4?","^4@","^4A"]],"^V","^4W","^6","reagent/ratom.cljs","^:",15,"^51",true,"^8",10,"^7",202,"^52",false,"^9",202,"^53","^54","^4H",["^O",["^4:","^4;","^4@","^4A"]]],"~$debug",["^ ","^V","~$reagent.ratom/debug","^6","reagent/ratom.cljs","^7",10,"^8",1,"^9",10,"^:",24,"^53","^61","^5",["^ ","^6","reagent/ratom.cljs","^7",10,"^8",19,"^9",10,"^:",24,"^53","^61"]],"~$-running",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",12,"^8",20,"^9",12,"^:",28,"^3U",true],"^3U",true,"^V","~$reagent.ratom/-running","^6","reagent/ratom.cljs","^:",28,"^8",1,"^7",12,"^9",12,"^53","~$cljs.core/Atom"],"~$cursor",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",305,"^8",7,"^9",305,"^:",13,"^R",["^S",["^3V",["^S",[["~$src","^4E"]]]]]],"^V","~$reagent.ratom/cursor","^6","reagent/ratom.cljs","^:",13,"^3Z",["^S",[["^7<","^4E"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",305,"^42","^4J","^9",305,"^44",2,"^45",true,"^R",["^S",["^3V",["^S",[["^7<","^4E"]]]]]],"~$Wrapper",["^ ","^4Y",4,"^47",["^O",["^48","^49","^4:","^4=","^4>","^4@","^4A"]],"^V","^5O","^6","reagent/ratom.cljs","^:",17,"^51",true,"^8",10,"^7",521,"^52",false,"^9",521,"^53","^54","^4H",["^O",["^48","^49","^4:","^4=","^4>","^4@","^4A"]]],"~$running",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",20,"^8",7,"^9",20,"^:",14,"^R",["^S",["^3V",["^S",[[]]]]]],"^V","~$reagent.ratom/running","^6","reagent/ratom.cljs","^:",14,"^3Z",["^S",[[]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",20,"^42","^43","^9",20,"^44",0,"^45",true,"^R",["^S",["^3V",["^S",[[]]]]]],"~$IRunnable",["^ ","^5",["^ ","^5Q",true,"^6","reagent/ratom.cljs","^:",23,"^8",14,"^7",334,"^5R",["^ ","^5;",["^ ","^66",[["^5="]]]],"^9",334,"^5S",["^ ","~:run",["^ ","^V","^66","^R",["^S",[["^5="]]],"^11",null]],"^5T",["^S",["@interface"]]],"^5Q",true,"^V","^5B","^6","reagent/ratom.cljs","^:",23,"^8",1,"^7",334,"^5R",["^ ","^5;",["^ ","^66",[["^5="]]]],"^5U",null,"^9",334,"^53","^43","^5S",["^ ","^7B",["^ ","^V","^66","^R",["^S",[["^5="]]],"^11",null]],"^5V",["^O",["^5J"]],"^5T",["^S",["@interface"]]],"~$reactive?",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",14,"^8",16,"^9",14,"^:",25,"^53","^61","^R",["^S",["^3V",["^S",[[]]]]]],"^V","~$reagent.ratom/reactive?","^6","reagent/ratom.cljs","^:",25,"^3Z",["^S",[[]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",14,"^42","^61","^9",14,"^44",0,"^53","^61","^45",true,"^R",["^S",["^3V",["^S",[[]]]]]],"~$deref-capture",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",39,"^8",8,"^9",39,"^:",21,"^3U",true,"^R",["^S",["^3V",["^S",[["~$f","~$r"]]]]]],"^3U",true,"^V","~$reagent.ratom/deref-capture","^6","reagent/ratom.cljs","^:",21,"^3Z",["^S",[["~$f","~$r"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",39,"^42","^43","^9",39,"^44",2,"^45",true,"^R",["^S",["^3V",["^S",[["~$f","~$r"]]]]]],"~$rea-queue",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",97,"^8",20,"^9",97,"^:",29,"^3U",true],"^3U",true,"^V","~$reagent.ratom/rea-queue","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",97,"^9",97,"^53","^4N"],"~$with-let-values",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",321,"^8",7,"^9",321,"^:",22,"^R",["^S",["^3V",["^S",[["^6K"]]]]]],"^V","~$reagent.ratom/with-let-values","^6","reagent/ratom.cljs","^:",22,"^3Z",["^S",[["^6K"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",321,"^42",["^O",["^43","~$array"]],"^9",321,"^44",1,"^45",true,"^R",["^S",["^3V",["^S",[["^6K"]]]]]],"~$track!",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",237,"^8",7,"^9",237,"^:",13,"^R",["^S",["^3V",["^S",[["~$f","~$&","^4U"]]]]],"^58",["^ ","^41",true,"^59",1,"^44",1,"^3Z",[["^S",["~$f","^4U"]]],"^R",["^S",[["~$f","~$&","^4U"]]],"^40",["^S",[null]]]],"^V","~$reagent.ratom/track!","^6","reagent/ratom.cljs","^:",13,"^58",["^ ","^41",true,"^59",1,"^44",1,"^3Z",[["^S",["~$f","^4U"]]],"^R",["^S",[["~$f","~$&","^4U"]]],"^40",["^S",[null]]],"^3Z",[["^S",["~$f","^4U"]]],"^3[",null,"^59",1,"^40",["^S",[null]],"^8",1,"^41",true,"^5;",[["^ ","^59",1,"^41",true,"^53","^43"]],"^7",237,"^42","^43","^9",237,"^44",1,"^45",true,"^R",["^S",[["~$f","~$&","^4U"]]]],"~$*ratom-context*",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",9,"^8",20,"^9",9,"^:",35,"~:dynamic",true,"~:declared",true],"^V","~$reagent.ratom/*ratom-context*","^6","reagent/ratom.cljs","^:",35,"^8",1,"^7O",true,"^7",9,"^7P",true,"^9",9,"^53","^43"],"~$check-derefs",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",513,"^8",7,"^9",513,"^:",19,"^R",["^S",["^3V",["^S",[["~$f"]]]]]],"^V","~$reagent.ratom/check-derefs","^6","reagent/ratom.cljs","^:",19,"^3Z",["^S",[["~$f"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",513,"^42","~$cljs.core/IVector","^9",513,"^44",1,"^45",true,"^R",["^S",["^3V",["^S",[["~$f"]]]]]],"~$remove-w",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",68,"^8",8,"^9",68,"^:",16,"^3U",true,"^R",["^S",["^3V",["^S",[["^5=","^6K"]]]]]],"^3U",true,"^V","~$reagent.ratom/remove-w","^6","reagent/ratom.cljs","^:",16,"^3Z",["^S",[["^5=","^6K"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",68,"^9",68,"^44",2,"^45",true,"^R",["^S",["^3V",["^S",[["^5=","^6K"]]]]]],"~$->Wrapper",["^ ","^3T",null,"^5",["^ ","^47",["^O",["^48","^49","^4:","^4=","^4>","^4@","^4A"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"^4B","^4C","^7",521,"^9",521,"^R",["^S",["^3V",["^S",[["^4F","~$callback","~$changed","^4G"]]]]],"^4H",["^O",["^48","^49","^4:","^4=","^4>","^4@","^4A"]],"^11","Positional factory function for reagent.ratom/Wrapper."],"^47",["^O",["^48","^49","^4:","^4=","^4>","^4@","^4A"]],"^V","~$reagent.ratom/->Wrapper","^6","reagent/ratom.cljs","^:",17,"^3Z",["^S",[["^4F","^7X","^7Y","^4G"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^4B","^4C","^7",521,"^42","^5O","^9",521,"^44",4,"^45",true,"^R",["^S",["^3V",["^S",[["^4F","^7X","^7Y","^4G"]]]]],"^4H",["^O",["^48","^49","^4:","^4=","^4>","^4@","^4A"]],"^11","Positional factory function for reagent.ratom/Wrapper."],"~$arr-len",["^ ","^3T",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",23,"^8",16,"^9",23,"^:",23,"^53","^6I","^3U",true,"^R",["^S",["^3V",["^S",[["~$x"]]]]]],"^3U",true,"^V","~$reagent.ratom/arr-len","^6","reagent/ratom.cljs","^:",23,"^3Z",["^S",[["~$x"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^7",23,"^42","^6I","^9",23,"^44",1,"^53","^6I","^45",true,"^R",["^S",["^3V",["^S",[["~$x"]]]]]],"~$->RAtom",["^ ","^3T",null,"^5",["^ ","^47",["^O",["^48","^49","^4:","^4;","^4=","^4>","^4?","^4Z","^4@","^4A","^4["]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^4B","^4C","^7",121,"^9",121,"^R",["^S",["^3V",["^S",[["^4F","^56","^57","^4G"]]]]],"^4H",["^O",["^48","^49","^4:","^4;","^4=","^4>","^4Z","^4@","^4A","^4["]],"^11","Positional factory function for reagent.ratom/RAtom."],"^47",["^O",["^48","^49","^4:","^4;","^4=","^4>","^4?","^4Z","^4@","^4A","^4["]],"^V","~$reagent.ratom/->RAtom","^6","reagent/ratom.cljs","^:",15,"^3Z",["^S",[["^4F","^56","^57","^4G"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^4B","^4C","^7",121,"^42","^50","^9",121,"^44",4,"^45",true,"^R",["^S",["^3V",["^S",[["^4F","^56","^57","^4G"]]]]],"^4H",["^O",["^48","^49","^4:","^4;","^4=","^4>","^4Z","^4@","^4A","^4["]],"^11","Positional factory function for reagent.ratom/RAtom."],"~$->Track",["^ ","^3T",null,"^5",["^ ","^47",["^O",["^4:","^4;","^4?","^4@","^4A"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^4B","^4C","^7",202,"^9",202,"^R",["^S",["^3V",["^S",[["~$f","^4U","^Z"]]]]],"^4H",["^O",["^4:","^4;","^4@","^4A"]],"^11","Positional factory function for reagent.ratom/Track."],"^47",["^O",["^4:","^4;","^4?","^4@","^4A"]],"^V","~$reagent.ratom/->Track","^6","reagent/ratom.cljs","^:",15,"^3Z",["^S",[["~$f","^4U","^Z"]]],"^3[",null,"^40",["^S",[null,null]],"^8",1,"^41",false,"^4B","^4C","^7",202,"^42","^4W","^9",202,"^44",3,"^45",true,"^R",["^S",["^3V",["^S",[["~$f","^4U","^Z"]]]]],"^4H",["^O",["^4:","^4;","^4@","^4A"]],"^11","Positional factory function for reagent.ratom/Track."]],"^1?",["^ ","^F","^F","^H","^H","^17","^17"],"~:cljs.analyzer/constants",["^ ","^1=",["^O",["~:on-set","^5H","^5F","^61","^Z","^7X","^5","~:else","^4E","^4U","~:validator","^4G","^56","^57","^5D","~:no-cache","^4D","^4F","~:auto-run","~:on-dispose","^53","~:mutable","^7Y","^5G","^5E","~$f"]],"~:order",["^4F","^8<","^56","^57","^4G","^5","^88","^87","^8;","~$f","^4U","^Z","^8:","^4D","^4E","^86","^89","^5D","^53","^61","^5E","^5F","^5G","^5H","^7X","^7Y"]],"^1H",["^ ","^1?",["^O",[]],"^1>",["^O",[]]],"^1I",["^ "],"^1J",["^18","^17","^16","^H","^19","^1:"]],"^X","^F","~:ns-specs",["^ "],"~:ns-spec-vars",[],"~:compiler-options",["^1X",[["^8@","~:static-fns"],true,["^8@","~:elide-asserts"],false,["^8@","~:optimize-constants"],null,["^8@","^1O"],null,["^8@","~:external-config"],null,["^8@","~:tooling-config"],null,["^8@","~:emit-constants"],null,["^8@","~:load-tests"],null,["^8@","~:form-size-threshold"],null,["^8@","~:infer-externs"],true,["^8@","^1Q"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^8@","~:fn-invoke-direct"],null,["^8@","~:source-map"],"/dev/null"]]]